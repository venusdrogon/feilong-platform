<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.feilong.platform</groupId>
	<artifactId>parent</artifactId>
	<version>2.1.0</version>

	<packaging>pom</packaging>

	<name>feilong-platform</name>
	<!-- 成立年份 -->
	<inceptionYear>2008</inceptionYear>

	<description>Reduce development, Release ideas</description>

	<url>http://venusdrogon.github.io/feilong-platform/</url>

	<!-- 软件配置管理SCM (Software Configuration Management), 如cvs ,svn ,git -->
	<scm>
		<url>https://github.com/venusdrogon/feilong-platform</url>
		<connection>scm:git:https://github.com/venusdrogon/feilong-platform</connection>
		<developerConnection>scm:git:git@github.com:venusdrogon/feilong-platform.git</developerConnection>
	</scm>

	<!--****************************定义属性 properties************************************* -->
	<properties>
		<!-- 不要使用${project.version}, 因为如果真实项目生成的版本不是1.7.0的时候,比如是 0.0.1版本,那么就引用不到feilong包 -->
		<version.feilong-platform>2.1.0</version.feilong-platform>
		<version.feilong-common-test>3.0.0</version.feilong-common-test>

		<!-- 让整个项目统一字符集编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- javadoc 和site 的生成目录 -->
		<folder.gh-pages>/Users/feilong/workspace/feilong/else/feilong-platform-gh-pages</folder.gh-pages>

		<!-- **********************begin maven-compiler-plugin config******************************************* -->
		<maven-compiler-plugin.source>1.7</maven-compiler-plugin.source>
		<maven-compiler-plugin.target>1.7</maven-compiler-plugin.target>
		<maven-compiler-plugin.encoding>${project.build.sourceEncoding}</maven-compiler-plugin.encoding>
		<!-- **********************end maven-compiler-plugin config******************************************* -->

		<!--****************************第三方************************************ -->

		<!--*********************begin dependency plugins version************************************ -->

		<!-- http://commons.apache.org/proper/commons-beanutils/changes-report.html -->
		<version.commons-beanutils>1.9.4</version.commons-beanutils>

		<!-- http://commons.apache.org/proper/commons-codec/changes-report.html#a1.12 -->
		<version.commons-codec>1.12</version.commons-codec>
		<version.commons-collections>3.2.2</version.commons-collections>
		<!-- http://commons.apache.org/proper/commons-collections/index.html -->
		<!-- 4.3 需要 jdk1.8 -->
		<version.commons-collections4>4.2</version.commons-collections4>

		<version.commons-configuration>1.10</version.commons-configuration>

		<!-- http://commons.apache.org/proper/commons-configuration/index.html -->
		<!-- http://commons.apache.org/proper/commons-configuration/changes-report.html#a2.4 -->
		<version.commons-configuration2>2.7</version.commons-configuration2>

		<!--
			The Apache Commons Compress library defines an API for working with ar, cpio, Unix dump, tar, zip, gzip, XZ, Pack200, bzip2, 7z, arj, lzma, snappy, DEFLATE,
			lz4, Brotli, Zstandard, DEFLATE64 and Z files.

			The code in this component has many origins:

			The bzip2, tar and zip support came from Avalon's Excalibur, but originally from Ant, as far as life in Apache goes.
			The tar package is originally Tim Endres' public domain package.
			The bzip2 package is based on the work done by Keiron Liddle as well as Julian Seward's libbzip2.
			It has migrated via:
			Ant -> Avalon-Excalibur -> Commons-IO -> Commons-Compress.
			The cpio package has been contributed by Michael Kuss and the jRPM project.
		-->

		<!-- http://commons.apache.org/proper/commons-compress/ -->
		<version.commons-compress>1.19</version.commons-compress>

		<version.commons-digester>2.1</version.commons-digester>

		<!--http://commons.apache.org/proper/commons-fileupload/changes-report.html#a1.4 -->
		<version.commons-fileupload>1.4</version.commons-fileupload>

		<!-- The Commons HttpClient project is now end of life, and is no longer being developed. It has been replaced by the Apache HttpComponents project in its HttpClient
			and HttpCore modules, which offer better performance and more flexibility. -->
		<!-- HttpClient was started in 2001 as a subproject of the Jakarta Commons, based on code developed by the Jakarta Slide project. It was promoted out of the Commons
			in 2004, graduating to a separate Jakarta project. In 2005, the HttpComponents project at Jakarta was created, with the task of developing a successor to HttpClient
			3.x and to maintain the existing codebase until the new one is ready to take over. The Commons project, cradle of HttpClient, left Jakarta in 2007 to become an
			independent
			Top Level Project. Later in the same year, the HttpComponents project also left Jakarta to become an independent Top Level Project, taking the responsibility
			for
			maintaining HttpClient with it. -->
		<version.commons-httpclient>3.1</version.commons-httpclient>

		<!-- http://hc.apache.org/downloads.cgi -->
		<version.httpcomponents>4.5.8</version.httpcomponents>

		<!-- base on jdk1.2 legacy(won't update) -->
		<version.commons-lang>2.6</version.commons-lang>

		<!-- http://commons.apache.org/proper/commons-lang/ -->
		<!-- https://github.com/apache/commons-lang/blob/master/RELEASE-NOTES.txt -->
		<!--
			Commons Lang 3.6 at least requires Java 7.0.
			Note that this has changed from Commons Lang 3.5, which only required Java 1.6
		-->
		<version.commons-lang3>3.8.1</version.commons-lang3>

		<!-- http://commons.apache.org/proper/commons-logging/download_logging.cgi -->
		<!-- commons-logging 仅仅 统一下版本 feilong platform 不直接使用这个jar -->
		<version.commons-logging>1.2</version.commons-logging>

		<!-- see in http://commons.apache.org/proper/commons-io/index.html -->
		<!--
			Commons IO 2.6 (requires JDK 1.7+)
			Commons IO 2.5 (requires JDK 1.6+)
		-->
		<version.commons-io>2.6</version.commons-io>

		<!-- see in http://commons.apache.org/proper/commons-net/index.html -->
		<version.commons-net>3.6</version.commons-net>

		<version.commons-validator>1.6</version.commons-validator>

		<!-- net.sf.json-lib -->
		<version.json-lib>2.4</version.json-lib>

		<!-- http://www.jcraft.com/jsch/ -->
		<!-- http://www.jcraft.com/jsch/ChangeLog -->
		<version.jsch>0.1.55</version.jsch>

		<!-- https://jsoup.org/news/ -->
		<version.jsoup>1.11.3</version.jsoup>

		<version.javamail>1.4.7</version.javamail>

		<version.servlet-api>3.0.1</version.servlet-api>
		<version.jsp-api>2.2</version.jsp-api>
		<version.el-api>2.2</version.el-api>
		<version.jstl>1.2</version.jstl>

		<!-- https://junit.org/junit4/ -->
		<version.junit>4.13</version.junit>
		<version.hamcrest-library>1.3</version.hamcrest-library>

		<!-- http://logging.apache.org/log4j/1.2/download.html -->
		<version.log4j>1.2.17</version.log4j>

		<!-- https://logback.qos.ch/news.html -->
		<version.logback>1.2.3</version.logback>

		<!-- http://www.slf4j.org/news.html -->
		<version.slf4j>1.7.30</version.slf4j>

		<version.spring>3.2.18.RELEASE</version.spring>

		<!-- http://x-stream.github.io/ -->
		<!-- https://github.com/x-stream/xstream/releases -->
		<!-- #133: XStream 1.4.11 fails to run on a Java Runtime < 8. -->
		<version.xstream>1.4.11.1</version.xstream>

		<version.xml-apis>1.4.01</version.xml-apis>
		<!-- https://xerces.apache.org/xerces2-j/releases.html -->
		<version.xercesImpl>2.12.0</version.xercesImpl>

		<!--
			http://tiles.apache.org/framework/whats-new.html

			Removals in Tiles 3.0
			Upgraded from JavaSE 5.0 to JavaSE 6.0.
			Upgraded from Servlet 2.4 and JSP 2.0 to Servlet 2.5 and JSP 2.1.
			Changed the Java API to adopt the Request API. The XML files and taglibs are compatible with tiles 2.2.
			Dropped the parameter based configuration that was deprecated in 2.2.
		-->
		<version.tiles>3.0.8</version.tiles>
		<!--*********************end dependency plugins version************************************ -->

		<!--*********************begin plugins version************************************ -->
		<v.maven-antrun-plugin>1.8</v.maven-antrun-plugin>

		<!-- http://maven.apache.org/components/plugins/maven-assembly-plugin/ -->
		<v.maven-assembly-plugin>3.2.0</v.maven-assembly-plugin>

		<v.maven-clean-plugin>3.1.0</v.maven-clean-plugin>

		<!-- http://maven.apache.org/plugins/maven-compiler-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MCOMPILER?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-compiler-plugin>3.8.1</v.maven-compiler-plugin>

		<v.maven-changes-plugin>2.12.1</v.maven-changes-plugin>

		<!-- CheckStyle能够帮助Java开发人员准守某些编码规范的工具。它能够自动检查代码。 -->
		<v.maven-checkstyle-plugin>2.17</v.maven-checkstyle-plugin>

		<!-- http://maven.apache.org/plugins/maven-dependency-plugin/index.html -->
		<v.maven-dependency-plugin>3.1.2</v.maven-dependency-plugin>
		<v.maven-deploy-plugin>2.8.2</v.maven-deploy-plugin>

		<v.maven-install-plugin>2.5.2</v.maven-install-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAVADOC?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-javadoc-plugin>3.2.0</v.maven-javadoc-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-jar-plugin>3.2.0</v.maven-jar-plugin>

		<v.maven-jxr-plugin>2.5</v.maven-jxr-plugin>
		<v.maven-pmd-plugin>3.8</v.maven-pmd-plugin>

		<!-- 用来做maven 插件的 -->
		<!-- http://maven.apache.org/plugin-tools/maven-plugin-plugin/project-info.html -->
		<v.maven-plugin-plugin>3.6.0</v.maven-plugin-plugin>

		<!-- https://maven.apache.org/scm/ -->
		<!-- SCM Software Configuration Management 软件配置管理 where each SCM command is implemented as a plugin goal -->
		<!-- 目前主要用于 scm-checkin-all.sh 一键push脚本 -->
		<v.maven-scm-plugin>1.11.2</v.maven-scm-plugin>

		<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
		<!-- https://issues.apache.org/jira/projects/MSITE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-site-plugin>3.9.0</v.maven-site-plugin>

		<!-- http://maven.apache.org/plugins/maven-source-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MSOURCES?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-source-plugin>3.2.1</v.maven-source-plugin>

		<!--http://maven.apache.org/surefire/maven-surefire-plugin/ -->
		<!--https://issues.apache.org/jira/projects/SUREFIRE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-surefire-plugin>2.22.2</v.maven-surefire-plugin>
		<v.maven-release-plugin>2.5.3</v.maven-release-plugin>

		<!-- https://issues.apache.org/jira/browse/MRESOURCES/?selectedTab=com.atlassian.jira.jira-projects-plugin:changelog-panel -->
		<v.maven-resources-plugin>3.1.0</v.maven-resources-plugin>

		<!-- http://maven.apache.org/plugins/maven-war-plugin/index.html -->
		<!-- https://issues.apache.org/jira/projects/MWAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-war-plugin>3.2.3</v.maven-war-plugin>

		<v.maven-shade-plugin>3.2.0</v.maven-shade-plugin>

		<!-- https://github.com/mojohaus/native2ascii-maven-plugin/wiki -->
		<v.native2ascii-maven-plugin>2.0.1</v.native2ascii-maven-plugin>

		<v.site-maven-plugin>0.12</v.site-maven-plugin>
		<v.sonar-maven-plugin>3.7.0.1746</v.sonar-maven-plugin>
		<!-- taglist 检查报告 -->
		<v.taglist-maven-plugin>2.4</v.taglist-maven-plugin>

		<v.license-maven-plugin>3.0</v.license-maven-plugin>

		<!-- 优雅地管理项目版本号 -->
		<!-- http://www.mojohaus.org/versions-maven-plugin/ -->
		<v.versions-maven-plugin>2.7</v.versions-maven-plugin>

		<!-- http://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
		<v.maven-project-info-reports-plugin>3.0.0</v.maven-project-info-reports-plugin>

		<!-- https://github.com/jacoco/jacoco/releases -->
		<v.jacoco-maven-plugin>0.8.5</v.jacoco-maven-plugin>

		<!-- https://github.com/git-commit-id/maven-git-commit-id-plugin -->
		<v.git-commit-id-plugin>2.2.6</v.git-commit-id-plugin>
		<!-- **********************end plugins version******************************************* -->

		<!-- **********************begin native2ascii config******************************************* -->
		<native2ascii-maven-plugin.pattern>**/*.properties</native2ascii-maven-plugin.pattern>
		<native2ascii-maven-plugin.encoding>${project.build.sourceEncoding}</native2ascii-maven-plugin.encoding>
		<!-- **********************end native2ascii config******************************************* -->

		<!-- **********************begin maven-surefire-plugin config******************************************* -->
		<maven-surefire-plugin.skip>true</maven-surefire-plugin.skip>
		<!-- **********************end maven-surefire-plugin config******************************************* -->

		<!-- **********************begin site-maven-plugin config******************************************* -->
		<site-maven-plugin.repositoryName>feilong-platform</site-maven-plugin.repositoryName>
		<site-maven-plugin.repositoryOwner>venusdrogon</site-maven-plugin.repositoryOwner>
		<site-maven-plugin.branch>refs/heads/repository</site-maven-plugin.branch>
		<!-- git commit message -->
		<site-maven-plugin.message>:rocket: deploy ${project.name} ${project.version}</site-maven-plugin.message>

		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
		<!-- **********************end site-maven-plugin config******************************************* -->

		<!-- **********************begin maven-javadoc-plugin config******************************************* -->
		<!-- 用来编译生成文档 -->
		<maven-javadoc-plugin.encoding>${project.build.sourceEncoding}</maven-javadoc-plugin.encoding>
		<maven-javadoc-plugin.docencoding>${project.build.sourceEncoding}</maven-javadoc-plugin.docencoding>
		<!-- 用来显示页面 META 部分 content="text/html; charset=GBK" -->
		<maven-javadoc-plugin.charset>${project.build.sourceEncoding}</maven-javadoc-plugin.charset>
		<!-- 用于读取javadoc 内部使用的 配置文件, 比如 描述文字为 描述,英文环境为description -->
		<maven-javadoc-plugin.locale>en_US</maven-javadoc-plugin.locale>

		<maven-javadoc-plugin.outputDirectory>${folder.gh-pages}/javadocs</maven-javadoc-plugin.outputDirectory>
		<maven-javadoc-plugin.reportOutputDirectory>${folder.gh-pages}/javadocs</maven-javadoc-plugin.reportOutputDirectory>
		<maven-javadoc-plugin.destDir>${project.name}</maven-javadoc-plugin.destDir>
		<maven-javadoc-plugin.javadocVersion>1.8</maven-javadoc-plugin.javadocVersion>
		<maven-javadoc-plugin.javadocDirectory>/Users/feilong/Development/DataCommon/Files/Java/Apache Maven/javadoc/springframework</maven-javadoc-plugin.javadocDirectory>

		<maven-javadoc-plugin.stylesheetfile>${maven-javadoc-plugin.javadocDirectory}/stylesheet.css</maven-javadoc-plugin.stylesheetfile>

		<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter,
			the <stylesheet/> parameter will indicate which stylesheet will be used

			the stylesheet included in the maven javadoc plugin or the default stylesheet used by the javadoc tool.
			maven value indicates the maven javadoc plugin stylesheet,
			while java value indicates the default javadoc tool stylesheet.

			The default is java value if not specified.
		-->
		<maven-javadoc-plugin.stylesheet>java</maven-javadoc-plugin.stylesheet>

		<maven-site-plugin.outputDirectory>${folder.gh-pages}/site/${project.name}</maven-site-plugin.outputDirectory>

		<!-- **********************end maven-javadoc-plugin config******************************************* -->
		<developer.feilong.name>feilong</developer.feilong.name>
		<!-- <developer.feilong.email>venusdrogon@163.com</developer.feilong.email> -->
	</properties>

	<!-- 项目发布管理 -->
	<distributionManagement>
		<!-- <url>file://${user.home}/feilong/repository</url> -->
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<!--******** slf4j******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!--******************** test************************* -->
		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- hamcrest-library -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- feilong-common-test -->
		<dependency>
			<groupId>com.feilong.test</groupId>
			<artifactId>feilong-common-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--*********************dependencyManagement****************************** -->
	<dependencyManagement>
		<dependencies>

			<!--*******************feilong************************* -->
			<!-- feilong-core -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-core</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-validator -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-validator</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-util-all -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-util-all</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-core-extension -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-core-extension</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-json-jsonlib -->
			<dependency>
				<groupId>com.feilong.json</groupId>
				<artifactId>feilong-json-jsonlib</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-json-jsonlib tests -->
			<dependency>
				<groupId>com.feilong.json</groupId>
				<artifactId>feilong-json-jsonlib</artifactId>
				<version>${version.feilong-platform}</version>
				<classifier>tests</classifier>
			</dependency>

			<!-- feilong-servlet -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-servlet</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-taglib -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-taglib</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-security -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-security</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!--feilong-velocity -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-velocity</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!--feilong-formatter -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-formatter</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-io -->
			<dependency>
				<groupId>com.feilong.platform</groupId>
				<artifactId>feilong-io</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- *******************spring********************************* -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${version.spring}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- **************************************************** -->
			<!-- java mail -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${version.javamail}</version>
			</dependency>

			<!-- *********************apache******************************* -->
			<!-- commons-logging 仅仅 统一下版本 feilong platform 不直接使用这个jar -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${version.commons-logging}</version>
			</dependency>

			<!-- commons-lang 仅仅 统一下版本 feilong platform 不直接使用这个jar -->
			<dependency>
				<artifactId>commons-lang</artifactId>
				<groupId>commons-lang</groupId>
				<version>${version.commons-lang}</version>
			</dependency>

			<!-- commons-lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.commons-lang3}</version>
			</dependency>

			<!-- commons-compress -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${version.commons-compress}</version>
			</dependency>

			<!-- commons-validator -->
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${version.commons-validator}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- net.sf.json-lib -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${version.json-lib}</version>
				<classifier>jdk15</classifier>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
					<!-- 2.5 -->
					<exclusion>
						<artifactId>commons-lang</artifactId>
						<groupId>commons-lang</groupId>
					</exclusion>
				</exclusions>
			</dependency>


			<!-- jsch 用于sftp 传输 -->
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${version.jsch}</version>
			</dependency>

			<!-- jsoup -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${version.jsoup}</version>
			</dependency>

			<!-- commons-net -->
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${version.commons-net}</version>
			</dependency>

			<!-- commons-httpclient -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${version.commons-httpclient}</version>
			</dependency>

			<!--
				HttpCore is a set of low level HTTP transport components that can be used to build custom client and server side HTTP services with a minimal footprint.

				HttpCore supports two I/O models: blocking I/O model based on the classic Java I/O and non-blocking, event driven I/O model based on Java NIO.
				The blocking I/O model may be more appropriate for data intensive, low latency scenarios, whereas the non-blocking model may be more appropriate for high latency
				scenarios where raw data throughput is less important than the ability to handle thousands of simultaneous HTTP connections in a resource efficient manner.
			-->
			<!-- 4.5.3 没有 httpcore -->
			<!-- httpcore
				<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${version.httpcore}</version>
				</dependency> -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${version.httpcomponents}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- HttpClient is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore.
				It also provides reusable components for client-side authentication,
				HTTP state management, and HTTP connection management.

				HttpComponents Client is a successor of and replacement for Commons HttpClient 3.x.

				Users of Commons HttpClient are strongly encouraged to upgrade. -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${version.httpcomponents}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${version.commons-beanutils}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- commons-codec -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${version.commons-codec}</version>
			</dependency>

			<!-- commons-digester -->
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${version.commons-digester}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- commons-configuration 通用接口，它可以使应用程序通过多种途径读取配置信 -->
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${version.commons-configuration}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-lang</artifactId>
						<groupId>commons-lang</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- commons-configuration2 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${version.commons-configuration2}</version>
			</dependency>

			<!-- commons-collections Requires Java 1.2+ 仅仅 统一下版本 feilong platform 不直接使用这个jar -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${version.commons-collections}</version>
			</dependency>

			<!-- commons-collections4 Requires Java 5.0+ -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${version.commons-collections4}</version>
			</dependency>

			<!-- commons-fileupload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${version.commons-fileupload}</version>
			</dependency>

			<!-- commons-io -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons-io}</version>
			</dependency>

			<!-- *********************json******************************* -->
			<!-- xercesImpl 解决This parser does not support specification "null" version "null" -->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${version.xercesImpl}</version>
			</dependency>

			<!-- xml-apis -->
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${version.xml-apis}</version>
			</dependency>

			<!-- xstream -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${version.xstream}</version>
			</dependency>

			<!--******** slf4j******** -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- ***********log4j *************** -->

			<!-- slf4j-log4j12 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${version.slf4j}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- log4j -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${version.log4j}</version>
			</dependency>

			<!--******** logback ******** -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>

			<!--jul-to-slf4j 桥接 用来输出 Java Logging Framework (JUL) java.util.logging.* -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- jcl-over-slf4j 桥接，用来输出 第三方Jakarta Commons Logging (JCL) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- log4j-over-slf4j桥接 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!--************************* tiles******************* -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-core</artifactId>
				<version>${version.tiles}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-api</artifactId>
				<version>${version.tiles}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-jsp</artifactId>
				<version>${version.tiles}</version>
			</dependency>

			<!-- jstl -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${version.jstl}</version>
			</dependency>

			<!--********************************provided******************************** -->
			<!-- servlet-api -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${version.servlet-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${version.jsp-api}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>${version.el-api}</version>
				<scope>provided</scope>
			</dependency>


			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>

			<!-- hamcrest-library -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${version.hamcrest-library}</version>
				<scope>test</scope>
			</dependency>

			<!-- feilong-common-test -->
			<dependency>
				<groupId>com.feilong.test</groupId>
				<artifactId>feilong-common-test</artifactId>
				<version>${version.feilong-common-test}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!--********************************build****************************************** -->
	<build>
		<plugins>

			<!-- maven-project-info-reports-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${v.maven-project-info-reports-plugin}</version>
			</plugin>

			<!-- versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>
			</plugin>

			<!-- maven-scm-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${v.maven-scm-plugin}</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
				</configuration>
			</plugin>

			<!-- sonar-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${v.sonar-maven-plugin}</version>
			</plugin>

			<!-- site-maven-plugin -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>${v.site-maven-plugin}</version>
				<configuration>
					<!-- git commit message -->
					<message>${site-maven-plugin.message}</message>
					<!-- disable webpage processing -->
					<noJekyll>true</noJekyll>

					<merge>true</merge>

					<!-- remote branch name -->
					<branch>${site-maven-plugin.branch}</branch>

					<!-- github repo name -->
					<repositoryName>${site-maven-plugin.repositoryName}</repositoryName>
					<!-- github username -->
					<repositoryOwner>${site-maven-plugin.repositoryOwner}</repositoryOwner>

					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<includes>
						<include>**/*</include>
					</includes>
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

			<!-- native2ascii-maven-plugin 国际化插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>${v.native2ascii-maven-plugin}</version>

				<executions>
					<execution>
						<id>native2ascii-resources</id>
						<goals>
							<goal>resources</goal>
						</goals>
						<phase>process-resources</phase><!-- default -->
						<configuration>
							<srcDir>src/main/resources</srcDir><!-- default -->
							<targetDir>${project.build.outputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>

					<execution>
						<id>native2ascii-testResources</id>
						<goals>
							<goal>testResources</goal>
						</goals>
						<phase>process-test-resources</phase><!-- default -->
						<configuration>
							<srcDir>src/test/resources</srcDir><!-- default -->
							<targetDir>${project.build.testOutputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- license-maven-plugin license插件 -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${v.license-maven-plugin}</version>
				<configuration>
					<header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
					<properties>
						<owner>${developer.feilong.name}</owner>
						<year>${project.inceptionYear}</year>
						<!-- <email>${developer.feilong.email}</email> -->
					</properties>
					<!-- -->
					<excludes>
						<exclude>**/README</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>**/src/main/resources/**</exclude>
					</excludes>
					<includes>
						<includes>**/src/main/java/**/*.java</includes>
					</includes>

					<headerDefinitions>
						<headerDefinition>${env._FEILONGTAGLIB}\Apache Maven\javadoc_style.xml</headerDefinition>
					</headerDefinitions>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-resources-plugin插件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${v.maven-resources-plugin}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>

					<!-- Copy any empty directories included in the Resources. -->
					<includeEmptyDirs>true</includeEmptyDirs>

					<!-- Additional file extensions to not apply filtering (already defined are : jpg, jpeg, gif, bmp, png) -->
					<nonFilteredFileExtensions>
						<!-- see https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<detail>true</detail>
						</configuration>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-compiler-plugin -->
			<plugin>
				<!-- true or false，是否此插件配置将会应用于poms，那些继承于此的项目 -->
				<inherited>true</inherited>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${v.maven-compiler-plugin}</version>
				<configuration>
					<!-- 指定高版本的源码和编译后的字节码文件 -->
					<source>${maven-compiler-plugin.source}</source>
					<target>${maven-compiler-plugin.target}</target>
					<encoding>${maven-compiler-plugin.encoding}</encoding>
					<!-- <verbose>true</verbose> -->
					<detail>true</detail>
				</configuration>
			</plugin>

			<!-- maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${v.maven-jar-plugin}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-source-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${v.maven-source-plugin}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-javadoc-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${v.maven-javadoc-plugin}</version>
				<configuration>
					<!-- <additionalparam>-Xdoclint:none</additionalparam> -->

					<!-- <verbose>true</verbose> -->
					<destDir>${maven-javadoc-plugin.destDir}</destDir>

					<outputDirectory>${maven-javadoc-plugin.outputDirectory}</outputDirectory>
					<reportOutputDirectory>${maven-javadoc-plugin.reportOutputDirectory}</reportOutputDirectory>

					<stylesheet>${maven-javadoc-plugin.stylesheet}</stylesheet>
					<stylesheetfile>${maven-javadoc-plugin.stylesheetfile}</stylesheetfile>

					<overview>src/main/java/overview.html</overview>

					<docfilessubdirs>true</docfilessubdirs>
					<!---->
					<javadocDirectory>${maven-javadoc-plugin.javadocDirectory}</javadocDirectory>
					<javadocVersion>${maven-javadoc-plugin.javadocVersion}</javadocVersion>

					<!-- Specifies the title to be placed in the HTML title tag.  -->
					<windowtitle>${project.name} ${project.version} API create by feilong</windowtitle>

					<!-- Specifies whether or not the author text is included in the generated Javadocs.  -->
					<author>true</author>
					<!-- Includes the version text in the generated docs.  -->
					<version>true</version>

					<failOnError>false</failOnError>

					<locale>${maven-javadoc-plugin.locale}</locale>

					<charset>${maven-javadoc-plugin.charset}</charset>
					<docencoding>${maven-javadoc-plugin.docencoding}</docencoding>
					<encoding>${maven-javadoc-plugin.encoding}</encoding>

					<header>${project.name} ${project.version} API</header>
					<footer>${project.name} ${project.version} API</footer>

					<bottom>
						<![CDATA[Copyright &copy; {inceptionYear}-{currentYear} by feilong]]>
					</bottom>

					<groups>
						<group>
							<title>Date package 日期</title>
							<packages>com.feilong.core.date</packages>
						</group>

						<group>
							<title>util package</title>
							<packages>com.feilong.core.util*</packages>
						</group>
					</groups>

					<!-- Detect the Javadoc links for all dependencies defined in the project. -->
					<detectLinks>true</detectLinks>
					<detectOfflineLinks>true</detectOfflineLinks>

					<!-- By default, the goal detects the Javadoc API link depending the value of the source parameter in theorg.apache.maven.plugins:maven-compiler-plugin (defined
						in ${project.build.plugins} or in${project.build.pluginManagement}),
					-->
					<detectJavaApiLink>true</detectJavaApiLink>
					<links>
						<!-- <link>http://docs.oracle.com/javase/7/docs/api/</link> -->
						<link>https://docs.oracle.com/javaee/7/api/</link>

						<link>http://commons.apache.org/proper/commons-lang/javadocs/api-release/</link>
						<link>http://commons.apache.org/proper/commons-collections/javadocs/api-release/</link>
						<link>http://commons.apache.org/proper/commons-io/javadocs/api-release/</link>
						<link>http://commons.apache.org/proper/commons-beanutils/javadocs/v${version.commons-beanutils}/apidocs/</link>
						<link>http://ezmorph.sourceforge.net/apidocs/</link>
						<link>http://docs.spring.io/spring/docs/${version.spring}/javadoc-api/</link>

						<!-- <link>http://venusdrogon.github.io/feilong-platform/javadocs/feilong-core/</link>
							<link>http://venusdrogon.github.io/feilong-platform/javadocs/feilong-servlet/</link>
							<link>http://venusdrogon.github.io/feilong-platform/javadocs/feilong-io/</link> -->
					</links>
				</configuration>
			</plugin>

			<!-- maven-surefire-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${v.maven-surefire-plugin}</version>
				<configuration>
					<skip>${maven-surefire-plugin.skip}</skip><!-- 跳过测试 -->

					<!-- Option to print summary of test suites or just print the test cases that have errors. Default value is: true. -->
					<printSummary>true</printSummary>
				</configuration>
			</plugin>

			<!-- maven-clean-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${v.maven-clean-plugin}</version>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-deploy-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${v.maven-deploy-plugin}</version>
				<configuration>
					<!-- Format: id::layout::url -->
					<!-- <altDeploymentRepository>internal.repo::default::file://${user.home}/feilong/repository</altDeploymentRepository> -->
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.code.maven-svn-wagon</groupId>
						<artifactId>maven-svn-wagon</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- maven-install-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-install-plugin</artifactId>
				<version>${v.maven-install-plugin}</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-release-plugin -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-release-plugin</artifactId>
				<version>${v.maven-release-plugin}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<!-- maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>

			<!-- maven-site-plugin -->
			<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${v.maven-site-plugin}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.7</version>
					</dependency>
				</dependencies>
				<configuration>
					<locales>en</locales><!-- zh_CN -->
					<generateSitemap>true</generateSitemap>
					<outputDirectory>${maven-site-plugin.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>

			<!-- jacoco-maven-plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${v.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- https://github.com/git-commit-id/maven-git-commit-id-plugin -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${v.git-commit-id-plugin}</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 使properties扩展到整个maven bulid 周期 Ref: https://github.com/ktoso/maven-git-commit-id-plugin/issues/280 -->
					<injectAllReactorProjects>true</injectAllReactorProjects>
					<dateFormat>yyyy.MM.dd HH:mm:ss</dateFormat>
					<verbose>true</verbose>
					<!-- 是否生 git.properties 属性文件 -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<!--git描述配置,可选;由JGit提供实现; -->
					<gitDescribe>
						<!--是否生成描述属性 -->
						<skip>false</skip>
						<!--提交操作未发现tag时,仅打印提交操作ID, -->
						<always>false</always>
						<!--提交操作ID显式字符长度,最大值为:40;默认值:7; 0代表特殊意义;后面有解释; -->
						<abbrev>7</abbrev>
						<!--构建触发时,代码有修改时(即"dirty state"),添加指定后缀;默认值:""; -->
						<dirty>-dirty</dirty>
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>
			</plugin>

		</plugins>

		<!-- pluginManagement -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${v.maven-antrun-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${v.maven-assembly-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${v.maven-war-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${v.maven-dependency-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>${v.maven-release-plugin}</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
											<goal>help</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${v.maven-plugin-plugin}</version>
					<configuration>
						<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
						<helpPackageName>org.apache.maven.plugins.help</helpPackageName>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<!-- *******************reporting***************************** -->
	<reporting>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>

				<reportSets>
					<reportSet>
						<reports>
							<!-- versions:dependency-updates-report -->
							<report>dependency-updates-report</report>

							<!-- produces a report of those plugins which have newer versions available. -->
							<report>plugin-updates-report</report>

							<!-- produces a report of those properties which are used to control artifact versions and which properies have newer versions available. -->
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>

			</plugin>

			<!-- 生成java代码交叉引用和源代码的html格式 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${v.maven-jxr-plugin}</version>
				<configuration>
					<aggregate>range</aggregate>
				</configuration>
			</plugin>

			<!-- 代码格式检查 -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${v.maven-checkstyle-plugin}</version>
				</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>

			<!--源码分析 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${v.maven-pmd-plugin}</version>
			</plugin>

			<!-- taglist 检查报告 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${v.taglist-maven-plugin}</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>XXX</displayName>
								<tags>
									<tag>
										<matchString>XXX</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>TODO</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>FIXME</displayName>
								<tags>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>@deprecated</displayName>
								<tags>
									<tag>
										<matchString>@deprecated</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${v.maven-changes-plugin}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<!-- 指定这个项目的组织机构信息 -->
	<organization>
		<name>feiLong</name>
		<url>http://venusdrogon.github.io/feilong-platform/</url>
	</organization>

	<!-- 项目提交者信息 -->
	<developers>
		<developer>
			<id>feilong</id>
			<name>金鑫</name>
			<!-- <email>${developer.feilong.email}</email> -->
			<url>http://venusdrogon.github.io/feilong-platform/</url>
			<organization>feilong</organization>
			<!-- <organizationUrl>http://venusdrogon.github.io/feilong-platform/</organizationUrl> -->
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<repositories>

		<repository>
			<!-- A unique identifier for a repository. -->
			<id>feilong-platform-repository</id>

			<!--Human readable name of the repository. -->
			<name>feilong platform repository</name>

			<url>https://raw.github.com/venusdrogon/feilong-platform/repository</url>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<!-- <updatePolicy>always</updatePolicy> -->
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>

	<!-- 项目的贡献者,但不属于开发小组 -->
	<contributors>
		<contributor>
			<name>benjamin.liu</name>
			<url>https://github.com/benjaliu</url>
		</contributor>

		<contributor>
			<name>yi.huang</name>
			<url>https://github.com/ananbeike</url>
		</contributor>

		<contributor>
			<name>minglei.feng</name>
			<url>https://github.com/shade41-code</url>
		</contributor>

		<contributor>
			<name>ijiangtao</name>
			<url>https://github.com/ijiangtao</url>
		</contributor>
	</contributors>
</project>